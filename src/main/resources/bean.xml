<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 把对象的创建交给spring来管理 -->
<!--    Spring 对 bean 的管理细节-->

<!--    1. 适用默认的构造函数创建-->
<!--    在 spring的配置文件中适用bean标签，配以id和class属性之后，并没有其他属性和标签时-->
<!--    采用此方法，如果此时类中没有默认的构造函数，则对象无法创建-->

<!--    <bean id="accountService" class="fun.youzz.service.Impl.AccountServiceImpl"></bean>-->

<!--    2. 使用普通工厂中的方法创建对象（使用某个类中的方法创建对象，并存入spring容器）-->

<!--    <bean id="instanceFactory" class="fun.youzz.factory.InstanceFactory"></bean>-->
<!--    <bean id="accountService" factory-bean="instanceFactory" factory-method="getAccountService"></bean>-->

<!--    3. 使用静态工厂中的静态方法创建对象，并存入spring容器-->
<!--    <bean id="accountService" class="fun.youzz.factory.StaticFactory" factory-method="getAccountService"></bean>-->


    <!--    bean 的作用范围-->
<!--        bean标签的 scope 属性-->
<!--            作用：用于指定bean的作用范围-->
<!--            singleton : 单例，默认值-->
<!--            prototype ： 多例-->
<!--            request: 作用于web应用的请求范围-->
<!--            session: 作用于web应用的会话范围-->
<!--            global-session: 作用于集群环境的会话范围-->

    <bean id="accountService" class="fun.youzz.service.Impl.AccountServiceImpl" scope="prototype"></bean>
    <bean id="accountDao" class="fun.youzz.dao.Impl.AccountDaoImpl"></bean>

</beans>