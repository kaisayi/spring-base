<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        https://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 配置业务层 -->
    <bean id="accountService" class="fun.youzz.service.impl.AccountServiceImpl">
        <property name="accountDao" ref="accountDao"></property>
    </bean>

    <bean id="accountDao" class="fun.youzz.dao.Impl.AccountDaoImpl">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/springdb"></property>
        <property name="username" value="root"></property>
        <property name="password" value="124607"></property>
    </bean>

<!--    spring基于xml的声明式事务控制配置步骤
            1. 配置事务管理器
            2. 配置事务的通知
                需要导入事务的约束 TX名称空间和约束，同时也需要aop的
                使用 tx:advice 标签配置事务通知
                  属性
                    id: 给事务通知一个唯一标志
                    transaction-manager 给事务通知一个事务管理的引用
            3. 配置aop中的通用切入点表达式
            4. 建立切入点表达式和事务通知的关系
            5. 配置事务的属性
                在事务的通知tx:advice标签内部
-->
    <!-- 事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 事务通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- 配置事务的属性
                isolation 事务的隔离级别 默认default
                propagation 事务的传播行为 默认值 REQUIRED 表示一定会有事务，增删改的选择。查询方法可以选择SUPPORTS
                read-only 指定事务是否只读，只有查询方法才能设置为true，默认为false 表示读写
                timeout 事务的超时时间，默认 为-1 永不超时
                rollback-for 指定一个异常，当产生异常时，事务回滚，产生其他异常时，事务不回滚，没有默认值，表示任何异常都回滚
                no-rollback-for 指定一个异常，当产生异常时，事务不回滚，产生其他异常时，事务回滚，没有默认值，表示任何异常都回滚
        -->
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!-- 配置aop -->
    <aop:config>
        <aop:pointcut id="pt1" expression="execution(* fun.youzz.service.impl.*.*(..))"/>
        <!-- 建立切入点表达式和事务通知的关系 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt1"></aop:advisor>
    </aop:config>



</beans>