<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd">

<!--    spring 的依赖注入
            依赖注入：Dependency Injection
            IOC 的作用：
                降低程序间的耦合（依赖关系）
            依赖关系的管理：
                交给spring维护
            在当前类需要用到其他类的对象时，由spring提供，只需要在配置文件中说明

            依赖关系的维护：
                能注入的数据有三类：
                    基本类型和String，
                    其他的bean类型（在配置文件中或者注解配置过）
                    复杂类型、集合类型
                注入的方式：
                    构造函数注入
                    使用set注入
                    使用注解注入-->

<!--    1. 构造函数注入
            使用的标签：constructor-arg
            标签的属性：
                type: 指定注入数据的数据类型
                index: 给构造函数中指定的索引位置的参数赋值，索引位置从0开始
                name: 给构造函数中指定的名称的参数赋值
                ============
                value: 用于提供基本类型的数据
                ref: 用于指定其他的bean类型数据，是指在spring的IOC核心容器中出现过得bean对象
            优势：
                在获取bean对象时，注入数据是必须的操作，否则无法创建
            劣势：
                改变了bean对象的实例化方式，使我们在创建对象时。如果用不到这些数据，也必须提供
            -->

    <bean id="accountService" class="fun.youzz.service.Impl.AccountServiceImpl">
        <constructor-arg index="0" value="test"/>
        <constructor-arg index="1" value="19"/>
        <constructor-arg index="2" ref="now"/>
    </bean>
<!--    配置一个日期对象 -->
    <bean id="now" class="java.util.Date"></bean>


<!--    2. set方法注入
            标签：property
            标签的属性
                name: 给构造函数中指定的名称的参数赋值
                value: 用于提供基本类型的数据
                ref: 用于指定其他的bean类型数据，是指在spring的IOC核心容器中出现过得bean对象
            常用
-->
    <bean id="accountService2" class="fun.youzz.service.Impl.AccountServiceImpl2">
        <property name="name" value="test"></property>
        <property name="age" value="20"></property>
        <property name="birtyday" ref="now"></property>
    </bean>

<!--
    复杂类型注入、集合类型注入
        用于list结构集合注入的标签：
            list array set
        用于map结构注入的标签：
            map props
-->
    <bean id="accountService3" class="fun.youzz.service.Impl.AccountServiceImpl3">
        <property name="myStrs">
            <array>
                <value>AAA</value>
                <value>BBB</value>
                <value>CC</value>
                <value>DDD</value>
            </array>
        </property>

        <property name="myList">
            <list>
                <value>AAA</value>
                <value>BBB</value>
                <value>CC</value>
                <value>DDD</value>
            </list>
        </property>

        <property name="myMap">
            <map>
                <entry key="test1" value="aaa"></entry>
                <entry key="test2" value="bbb"></entry>
            </map>
        </property>
        
        <property name="myProps">
            <props>
                <prop key="testc">ccc</prop>
                <prop key="testd">ddd</prop>
            </props>
        </property>

    </bean>


    <bean id="accountDao" class="fun.youzz.dao.Impl.AccountDaoImpl"></bean>

</beans>